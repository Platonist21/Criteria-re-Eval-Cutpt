---
title: "Supplement to Criteria to Reevaluate Cutpt"
author: "Charles Tan"
date: 4/12/2024
date-format: long
format:
  html:
    embed-resources: true
editor: visual
bibliography: Refs.bib
---

When assessing previously determined cut points using in-study baseline samples or for a new population, it is a good practice not to change too hastily when the sample size is small. @TAN2020 provided distribution-free criteria on when the inherent sampling variability cannot be ruled out for the apparent deviation from the target rate. Here, I seek to document the calculations performed for @TAN2020, and provide the detailed criteria for different sample sizes in a data listing to assist the use of the paper in practice.

## Calculations behind Table 1

```{r}
source("Funs.R")
tab1t1 <- CalcLmt(size=c(50,100,150,200,250,300,400,500), pct=0.95)
tab1t1 <- subset(tab1t1, select=c(size, lower, upper))
tab1t1 <- data.frame(tab1t1, Clow=tab1t1$size-tab1t1$upper,
                     Cupp=tab1t1$size-tab1t1$lower)
tab1t1 <- data.frame(tab1t1, Plow=tab1t1$Clow/tab1t1$size*100,
                     Pupp=tab1t1$Cupp/tab1t1$size*100)
knitr::kable(tab1t1)
```

The above and the below are the calculations for tier 1 and 2 cut points, respectively. The first column **size** and the last four columns appeared in Table 1 of @TAN2020. These are ***Acceptable Ranges***. In other words, if the numbers of "positives" are within these ranges, the inherent sampling variability cannot be ruled out.

```{r}
tab1t2 <- CalcLmt(size=c(50,100,150,200,250,300,400,500), pct=0.99)
tab1t2 <- subset(tab1t2, select=c(size, lower, upper))
tab1t2 <- data.frame(tab1t2, Clow=tab1t2$size-tab1t2$upper,
                     Cupp=tab1t2$size-tab1t2$lower)
tab1t2 <- data.frame(tab1t2, Plow=round(tab1t2$Clow/tab1t2$size*100, digits=2),
                     Pupp=round(tab1t2$Cupp/tab1t2$size*100, digits=2))
knitr::kable(tab1t2)
```

## Data behind Figs 1 & 2

Figs 1 & 2 plot the same calculations on more refined grid: from sample size 20 to 500 for tier 1 cut point, and 100 to 500 for tier 2 cut point.

```{r}
T1crit <- CalcLmt(size=20:500, pct=0.95)
T2crit <- CalcLmt(size=100:500, pct=0.99)
```

Below are the detailed ***Acceptable Ranges*** for tier 1 cut point (the last four columns):

```{r}
#| warning: false
T1tab <- subset(T1crit, select=c(size, lower, upper))
T1tab <- data.frame(T1tab, Clow=T1tab$size-T1tab$upper,
                     Cupp=T1tab$size-T1tab$lower)
T1tab <- data.frame(T1tab, Plow=round(T1tab$Clow/T1tab$size*100, digits=2),
                     Pupp=round(T1tab$Cupp/T1tab$size*100, digits=2))
library(DT)
datatable(T1tab)
```

Below are the detailed ***Acceptable Ranges*** for tier 2 cut point (the last four columns):

```{r}
T2tab <- subset(T2crit, select=c(size, lower, upper))
T2tab <- data.frame(T2tab, Clow=T2tab$size-T2tab$upper,
                     Cupp=T2tab$size-T2tab$lower)
T2tab <- data.frame(T2tab, Plow=round(T2tab$Clow/T2tab$size*100, digits=2),
                     Pupp=round(T2tab$Cupp/T2tab$size*100, digits=2))
datatable(T2tab)
```

## Key Function

The key calculations are done by the customized function **CalcLmt**

```{r}
CalcLmt
```

## Codes to Produce Figs 1&2

Here are the codes to produce Fig 1:

```{r}
#| fig-width: 10
#| fig-height: 8
plot(T1crit$size, T1crit$size-T1crit$upper, xlim=c(0, 500), ylim=c(0, 35), 
     xlab="Dataset Size", ylab="# Above Cut Point", type="l", col="blue")
lines(T1crit$size, T1crit$size-T1crit$lower, lty=1, col="blue")

lines(T2crit$size, T2crit$size-T2crit$upper, lty=1, col="red")
lines(T2crit$size, T2crit$size-T2crit$lower, lty=1, col="red")  

legend(1, 35, lty=c(1,1), col=c("blue","red"), 
       legend=c("Upper and Lower Bounds for Tier 1 Cut Points", 
                "Upper and Lower Bounds for Tier 2 Cut Points"))
```

Here are the codes to produce Fig 2:

```{r}
#| fig-width: 10
#| fig-height: 8
plot(T1crit$size, T1crit$outupp*100, xlim=c(0, 500), ylim=c(0, 15), 
     xlab="Dataset Size", ylab="% Above Cut Point", type="l", col="blue")
lines(T1crit$size, T1crit$outlow*100, lty=1, col="blue")
abline(h=5, lty=2, col="blue")

lines(T2crit$size, T2crit$outupp*100, lty=1, col="red")
lines(T2crit$size, T2crit$outlow*100, lty=1, col="red")  
abline(h=1, lty=2, col="red")

legend(200, 15, lty=c(1,1), col=c("blue","red"), 
       legend=c("Upper and Lower Bounds for Tier 1 Cut Points", 
                "Upper and Lower Bounds for Tier 2 Cut Points"))
```

## Reference
